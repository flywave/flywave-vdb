
INCLUDE(CheckIncludeFile)

# version
SET(SNAPPY_MAJOR 1)
SET(SNAPPY_MINOR 0)
SET(SNAPPY_PATCHLEVEL 4)

SET(snappy_SOURCE_FILES
    snappy.cc snappy-sinksource.cc snappy-stubs-internal.cc snappy-c.cc)

SET(snappy_HEADER_FILES
    snappy.h snappy-sinksource.h snappy-stubs-internal.h snappy-internal.h snappy-c.h)

INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_BINARY_DIR})

IF (WIN32)
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/win32)
  SET(snappy_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/win32 PARENT_SCOPE)
ENDIF()

IF(APPLE)
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/mac)
  SET(snappy_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/mac PARENT_SCOPE)
ENDIF()

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/linux)
  SET(snappy_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/linux PARENT_SCOPE)
ENDIF()

CHECK_INCLUDE_FILE(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILE(stddef.h HAVE_STDDEF_H)

IF(HAVE_STDINT_H)
    SET(ac_cv_have_stdint_h 1)
ELSE()
    SET(ac_cv_have_stdint_h 0)
ENDIF()

IF(HAVE_STDDEF_H)
    SET(ac_cv_have_stddef_h 1)
ELSE()
    SET(ac_cv_have_stddef_h 0)
ENDIF()

IF(WIN32)
    ADD_DEFINITIONS(-DHAVE_WINDOWS_H)
ENDIF()

ADD_LIBRARY(snappy STATIC
            ${snappy_HEADER_FILES}
            ${snappy_SOURCE_FILES}
          )

TARGET_INCLUDE_DIRECTORIES(snappy PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>)

SOURCE_GROUP("src" FILES ${snappy_SOURCE_FILES})
SOURCE_GROUP("include" FILES ${snappy_HEADER_FILES})

SET_TARGET_PROPERTIES(snappy
    PROPERTIES PUBLIC_HEADER "${snappy_HEADER_FILES}")

IF(FLYWAVE_ENABLE_SOLUTION_FOLDERS)
  SET_TARGET_PROPERTIES(snappy PROPERTIES FOLDER external)
ENDIF(FLYWAVE_ENABLE_SOLUTION_FOLDERS)
