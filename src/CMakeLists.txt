
include_directories(${FLYWAVE_INCLUDE_DIRS})

if (MSVC)
    add_definitions(-DCONSTEXPR=const -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS)
else()
    add_definitions(-DCONSTEXPR=constexpr)
endif()

FILE( GLOB vdb_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cc )
FILE( GLOB vdb_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.hh ${CMAKE_CURRENT_SOURCE_DIR}/*.h )

ADD_LIBRARY(vdb STATIC
            ${vdb_HEADER_FILES}
            ${vdb_SOURCE_FILES}
          )

TARGET_INCLUDE_DIRECTORIES(vdb PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>)

SOURCE_GROUP("src" FILES ${vdb_SOURCE_FILES})
SOURCE_GROUP("include" FILES ${vdb_HEADER_FILES})

SET_TARGET_PROPERTIES(vdb
                    PROPERTIES PUBLIC_HEADER "${headers}")

SET(test_SOURCE_FILES test.cc)
SOURCE_GROUP("src" FILES ${test_SOURCE_FILES})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_EXECUTABLE(test ${test_SOURCE_FILES})

IF(FLYWAVE_ENABLE_SOLUTION_FOLDERS)
  SET_TARGET_PROPERTIES(test PROPERTIES FOLDER tests)
ENDIF(FLYWAVE_ENABLE_SOLUTION_FOLDERS)

IF(UNIX AND NOT APPLE)
TARGET_LINK_LIBRARIES(test -Wl,--start-group ${FLYWAVE_LIBRARY_DEPES} vdb -Wl,--end-group)
ELSE()
TARGET_LINK_LIBRARIES(test ${FLYWAVE_LIBRARY_DEPES} vdb)
ENDIF()
